{"version":3,"sources":["components/Search/Search.js","components/Table/Table.js","API/API.js","components/Body/Body.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","className","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","Table","scope","data-field","data-sortable","onClick","onSort","state","filteredEmployees","map","employee","first","last","location","street","city","postcode","fullName","key","id","src","picture","thumbnail","alt","href","phone","email","number","axios","get","Body","employees","search","sorting","initialsorting","event","target","setState","searchEmployees","trim","preventDefault","sortedEmployees","console","log","reverse","input","filter","includes","API","then","res","data","results","catch","err","Search","this","filterEmployees","formatDate","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5dbd476.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SearchBar = (props) => {\n    return (\n\n        <nav className=\"navbar justify-content-center\">\n            <h5>Search For an Employee</h5>\n            <form className=\"form-inline m-2\" onSubmit={props.handleFormSubmit}>\n                <input\n                    className=\"form-control\"\n                    value={props.value}\n                    name=\"search\"\n                    onChange={props.handleInputChange}\n                    type=\"search\"\n                    placeholder=\"Search for Employee\"\n                />\n            </form>\n        </nav>\n\n    );\n};\n\nexport default SearchBar;","import React from 'react';\n\nconst Table = (props) => {\n    return (\n        <table className='table'>\n            <thead>\n                <tr>\n                    <th scope='col'>Picture</th>\n                    <th scope='col' data-field=\"name\" data-sortable='true'>\n                        <span onClick={() => props.onSort('name')}>Name</span>\n                    </th>\n                    <th scope=\"col\" data-sortable='true'>\n                        <span onClick={() => props.onSort('phone')}>Phone</span>\n                    </th>\n                    <th scope=\"col\" data-sortable='true'>\n                        <span onClick={() => props.onSort('email')}>Email</span>\n                    </th>\n                    <th scope=\"col\" data-sortable='true'>\n                        <span onClick={() => props.onSort('city')}>City</span>\n                    </th>\n                    <th scope=\"col\" data-sortable='true'>\n                        <span onClick={() => props.onSort('state')}>State</span>\n                    </th>\n                    <th scope=\"col\" data-sortable='true'>\n                        <span onClick={() => props.onSort('street')}>Street</span>\n                    </th>\n                    <th scope=\"col\" data-sortable='true'>\n                        <span onClick={() => props.onSort('postcode')}>Postcode</span>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    props.state.filteredEmployees.map((employee) => {\n                        const { first, last } = employee.name;\n                        const { street, city, state, postcode } = employee.location;\n                        const fullName = ` ${last}, ${first}`;\n                        const key = employee.id.value\n\n                        return (\n                            <>\n                            <tr key={key}>\n                                <td>\n                                    <img className='img' src={employee.picture.thumbnail} alt={fullName} />\n                                </td>\n                                <td className='row-data'>{fullName}</td>\n                                <td className='row-data'>\n                                    <a href={`tel:${employee.phone}`}>{employee.phone}</a></td>\n                                <td className='row-data email'>\n                                    <a href={`mailto:${employee.email}`}>{employee.email}</a>\n                                </td>\n                                <td className='row-data'>{city}</td>\n                                <td className='row-data'>{state}</td>\n                                <td className='row-data'>{`${street.number} ${street.name}`}</td>\n                                <td className='row-data'>{postcode}</td>\n                            </tr>\n                            </>\n                        );\n                    })\n                }\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;","  \nimport axios from 'axios'\n\nexport default{\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=100&nat=us\");\n  },\n  };","\nimport React, { Component } from 'react'\nimport Search from '../Search/Search.js'\nimport Table from '../Table/Table.js'\nimport API from '../../API/API.js'\n\nclass Body extends Component {\n    state = {\n        employees: [],\n        search: '',\n        filteredEmployees: [],\n        sorting: this.initialsorting,\n    };\n\n\n    get initialsorting() {\n        return {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            city: \"\",\n            state: \"\",\n            street: \"\",\n            postcode: \"\",\n        };\n    }\n\n    componentDidMount() {\n        API.getUsers()\n            .then((res) =>{\n                this.setState({\n                    employees: res.data.results,\n                    filteredEmployees: res.data.results,\n                })\n            })\n            .catch((err) => console.log(err))\n    };\n\n    handleInputChange = (event) => {\n        const value = event.target.value;\n        this.setState({ search: value });\n        this.searchEmployees(value.trim())\n    };\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n    };\n\n\n    onSort = (key, primary = 0, secondary = 0) => {\n        let sortedEmployees = this.state.filteredEmployees;\n        console.log(key)\n        if (this.state.sorting[key]) {\n            this.setState({\n                filteredEmployees: sortedEmployees.reverse(),\n                sorting: {\n                    ...this.initialsorting,\n                    [key]: this.state.sorting[key] === \"asc\" ? \"desc\" : \"asc\",\n                },\n            });\n        } else {\n\n            this.setState({\n                filteredEmployees: sortedEmployees,\n                sorting: {\n                    ...this.initialsorting,\n                    [key]: \"asc\",\n                },\n            });\n        }\n    };\n\n    searchEmployees = (input) => {\n        if (input) {\n            console.log(input)\n            this.setState({\n                filteredEmployees: this.state.employees.filter((employee) => {\n                    console.log(employee)\n                    return (\n                        employee.name.last.includes(input) ||\n                        employee.name.first.includes(input) ||\n                        employee.phone.includes(input) ||\n                        employee.email.includes(input) ||\n                        employee.location.city.includes(input) ||\n                        employee.location.state.includes(input)\n                    );\n                }),\n            });\n        } else {\n            this.setState({ filteredEmployees: this.state.employees });\n        }\n    };\n\n    render() {\n        return (\n            <>\n                <Search\n                    value={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                />\n                <div className='container mt-4'>\n                <Table\n                    state={this.state}\n                    onSort={this.onSort}\n                    filterEmployees={this.filterEmployees}\n                    formatDate={this.formatDate}\n                />\n            </div>\n                </>\n        )\n    }\n}\n\nexport default Body;","import React from \"react\"\nimport Body from \"./components/Body/Body.js\"\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <Body />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}